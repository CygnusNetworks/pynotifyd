[general]
# Define a directory for spool files (must be absolute)
queuedir = /var/spool/pynotifyd/

# Define a list of providers to try in the given order.
#  * A number tells the daemon to delay processing the message for the given number of seconds.
#  * A non-number are subsection names from the providers section.
retry = jabber,1,jabber,1,tmobile,1,sipgate,1,yapsssh,1,yapsssh,1,yapsssh,GIVEUP

# Define which notification for new files in spool dir to be used. 
#  * inotify: The daemon watches the spool directory with Linux intoify.
#  * signal: The daemon periodically checks the spool directory and can be
#            triggered via a SIGUSR1 signal.
notify = inotify

# If set: modify argv[0] to be this string in the daemon. (Useful for snmpd)
proctitle = pynotifyd

# Change the group of the daemon (either by number or by name).
# chgid = pynotifyd
# Change the user of the daemon (number or name).
# chuid = pynotifyd

[contacts]
# define contacts here
[[username]]
# set jabber id of user
jabber = someone@jabberserver.local
# do not send any messages if only the following ressources are online
jabber_exclude_resources = ipad
# Include specific states to send jabber notifications to
jabber_include_states = "online, dnd"
# Set a phone number to be used for sms services
phone = +49666666666

# Definition of providers for sending notifications
[providers]
# Developergarden T-Mobile SendSMS Interface
[[tmobile]]
driver = developergarden
# Developergarden Usernames
username = foo
password = bar
# A specific sender number. Needs to be registered before using developergarden_ctl
sender = +496666

# sipgate.de SMS sending
[[sipgate]]
driver = sipgate
username = foo
password = bar
api = basic

# Command line call for very old yaps ISDN SMS sending software
[[yaps]]
driver = shell
command = yaps %(contact:phone)s %(message)s

# Send SMS through yaps via ssh connection
[[yapsssh]]
driver = shell
yapshost = 10.0.0.123
command = ssh -i /etc/nagios3/id_rsa root@$yapshost yaps %(contact:phone)s %(message)s

# Jabber/XMPP Message sending
[[jabber]]
driver = jabber
# driver = persistentjabber # if you do not want to connect for each delivery
jid = someone@jabberhost.com/$hostname
password = bar
timeout = 10

# E-Mail error handler. Might be used as last in retry to finally send e mail
[[errorhandler]]
driver = mail
from = pynotifyd@something
# instead of taking email from the contact use forceto as destination
forceto = root@somewhere
subject = Error sending PyNotifyD message

# a mock provider for testing purposes
[[mock]]
driver = mock
# deliveries fail randomly, message is ignored.
# Options: random, permanent, temporary, success
failtype = random

# Impose a delay in seconds on processing the message.
# duration = 3
